name: CI

on:
  push:
    branches: [ master, ci ]

  pull_request:
    branches: [ master ]

jobs:

  build-standalone:
    runs-on: ubuntu-22.04

    steps:

    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v7

    - uses: actions/cache@v4
      id: cache-standalone
      with:
        key: standalone-setup-${{ runner.os }}-${{ hashFiles('meson*', 'subprojects/*.wrap') }}
        restore-keys: standalone-setup-${{ runner.os }}-
        path: |
          ./subprojects/packagecache
          ./subprojects/wasm-micro-runtime-WAMR-*/core/deps/llvm/build/bin
          ./subprojects/wasm-micro-runtime-WAMR-*/core/deps/llvm/build/include
          ./subprojects/wasm-micro-runtime-WAMR-*/core/deps/llvm/build/lib
          ./subprojects/wasm-micro-runtime-WAMR-*/core/deps/llvm/build/libexec
          ./subprojects/wasm-micro-runtime-WAMR-*/core/deps/llvm/build/share

    - name: Install LLVM build dependencies
      id: ccache-setup
      if: steps.cache-standalone.outputs.cache-hit != 'true'
      run: |
        sudo apt-get update
        sudo apt-get install -y ccache
        echo "ccache_dir=$(ccache --get-config=cache_dir)" >> $GITHUB_OUTPUT

    - uses: actions/cache@v4
      if: steps.cache-standalone.outputs.cache-hit != 'true'
      with:
        key: llvm-ccache-${{ runner.os }}-${{ hashFiles('meson*', 'subprojects/*.wrap') }}
        restore-keys: llvm-ccache-${{ runner.os }}-
        path: ${{ steps.ccache-setup.outputs.ccache_dir }}

    - name: Build standalone
      run: |
        uv venv
        make standalone

    - uses: actions/upload-artifact@v4
      with:
        name: standalone
        path: dist
