diff --git a/core/iwasm/common/gc/gc_object.h b/core/iwasm/common/gc/gc_object.h
index 75fdbef5..5622bfd8 100644
--- a/core/iwasm/common/gc/gc_object.h
+++ b/core/iwasm/common/gc/gc_object.h
@@ -33,6 +33,8 @@ typedef uintptr_t WASMObjectHeader;
 
 #define WASM_OBJ_EXTRA_INFO_FLAG (((uintptr_t)1) << 2)
 
+#define WASM_OBJ_STATIC_OBJ_FLAG (((uintptr_t)1) << 3)
+
 /* Representation of WASM objects */
 typedef struct WASMObject {
     WASMObjectHeader header;
@@ -315,6 +317,10 @@ wasm_obj_is_created_from_heap(WASMObjectRef obj)
     if (obj == NULL || (((uintptr_t)obj) & 1))
         /* null object or i31 object */
         return false;
+    if ((obj->header & (WASM_OBJ_EXTERNREF_OBJ_FLAG | WASM_OBJ_STATIC_OBJ_FLAG))
+        == (WASM_OBJ_EXTERNREF_OBJ_FLAG | WASM_OBJ_STATIC_OBJ_FLAG))
+        /* static externref object */
+        return false;
     return true;
 }
 
diff --git a/core/shared/mem-alloc/ems/ems_gc.c b/core/shared/mem-alloc/ems/ems_gc.c
index 26e83a97..07befa8c 100644
--- a/core/shared/mem-alloc/ems/ems_gc.c
+++ b/core/shared/mem-alloc/ems/ems_gc.c
@@ -6,6 +6,8 @@
 #include "ems_gc.h"
 #include "ems_gc_internal.h"
 
+#include <gc_object.h>
+
 #define GB (1 << 30UL)
 
 #define MARK_NODE_OBJ_CNT 256
@@ -379,7 +381,7 @@ reclaim_instance_heap(gc_heap_t *heap)
                     offset = ref_start_offset + j * sizeof(void *);
                     bh_assert(offset + sizeof(void *) < size);
                     ref = *(gc_object_t *)(((gc_uint8 *)obj) + offset);
-                    if (ref == NULL_REF || ((uintptr_t)ref & 1))
+                    if (!wasm_obj_is_created_from_heap(ref))
                         continue; /* null object or i31 object */
                     if (add_wo_to_expand(heap, ref) == GC_ERROR) {
                         LOG_ERROR("add_wo_to_expand failed");
@@ -395,7 +397,7 @@ reclaim_instance_heap(gc_heap_t *heap)
                     bh_assert(offset + sizeof(void *) < size);
 
                     ref = *(gc_object_t *)(((gc_uint8 *)obj) + offset);
-                    if (ref == NULL_REF || ((uintptr_t)ref & 1))
+                    if (!wasm_obj_is_created_from_heap(ref))
                         continue; /* null object or i31 object */
                     if (add_wo_to_expand(heap, ref) == GC_ERROR) {
                         LOG_ERROR("mark process failed");
