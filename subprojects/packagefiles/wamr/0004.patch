From 18924258e08da63039046b6b293b30cee1592a2e Mon Sep 17 00:00:00 2001
From: Xenia Lu <xenia.lyy@gmail.com>
Date: Sun, 28 Sep 2025 03:52:17 +0800
Subject: [PATCH 4/4] gate stack call dumping

---
 core/iwasm/aot/aot_runtime.c                 | 6 ++++--
 core/iwasm/common/wasm_exec_env.h            | 4 ++++
 core/iwasm/interpreter/wasm_interp_classic.c | 3 ++-
 core/iwasm/interpreter/wasm_interp_fast.c    | 3 ++-
 core/iwasm/interpreter/wasm_runtime.c        | 3 ++-
 5 files changed, 14 insertions(+), 5 deletions(-)

diff --git a/core/iwasm/aot/aot_runtime.c b/core/iwasm/aot/aot_runtime.c
index d2621fb2..369e8eec 100644
--- a/core/iwasm/aot/aot_runtime.c
+++ b/core/iwasm/aot/aot_runtime.c
@@ -2682,7 +2682,8 @@ aot_call_function(WASMExecEnv *exec_env, AOTFunctionInstance *function,
             }
 #endif
 #if WASM_ENABLE_DUMP_CALL_STACK != 0
-            if (aot_create_call_stack(exec_env)) {
+            if (aot_create_call_stack(exec_env)
+                && !exec_env->disable_dump_call_stack) {
                 aot_dump_call_stack(exec_env, true, NULL, 0);
             }
 #endif
@@ -2755,7 +2756,8 @@ aot_call_function(WASMExecEnv *exec_env, AOTFunctionInstance *function,
             }
 #endif
 #if WASM_ENABLE_DUMP_CALL_STACK != 0
-            if (aot_create_call_stack(exec_env)) {
+            if (aot_create_call_stack(exec_env)
+                && !exec_env->disable_dump_call_stack) {
                 aot_dump_call_stack(exec_env, true, NULL, 0);
             }
 #endif
diff --git a/core/iwasm/common/wasm_exec_env.h b/core/iwasm/common/wasm_exec_env.h
index 5d80312f..6494dcd1 100644
--- a/core/iwasm/common/wasm_exec_env.h
+++ b/core/iwasm/common/wasm_exec_env.h
@@ -87,6 +87,10 @@ typedef struct WASMExecEnv {
         uint8 *bottom;
     } wasm_stack;
 
+#if WASM_ENABLE_DUMP_CALL_STACK != 0
+    bool disable_dump_call_stack;
+#endif
+
 #if WASM_ENABLE_INSTRUCTION_METERING != 0
     /* instructions to execute */
     int instructions_to_execute;
diff --git a/core/iwasm/interpreter/wasm_interp_classic.c b/core/iwasm/interpreter/wasm_interp_classic.c
index d0ac01bd..9d7b05a7 100644
--- a/core/iwasm/interpreter/wasm_interp_classic.c
+++ b/core/iwasm/interpreter/wasm_interp_classic.c
@@ -7546,7 +7546,8 @@ wasm_interp_call_wasm(WASMModuleInstance *module_inst, WASMExecEnv *exec_env,
     }
     else {
 #if WASM_ENABLE_DUMP_CALL_STACK != 0
-        if (wasm_interp_create_call_stack(exec_env)) {
+        if (wasm_interp_create_call_stack(exec_env)
+            && !exec_env->disable_dump_call_stack) {
             wasm_interp_dump_call_stack(exec_env, true, NULL, 0);
         }
 #endif
diff --git a/core/iwasm/interpreter/wasm_interp_fast.c b/core/iwasm/interpreter/wasm_interp_fast.c
index 8f6bceb5..96fd2d19 100644
--- a/core/iwasm/interpreter/wasm_interp_fast.c
+++ b/core/iwasm/interpreter/wasm_interp_fast.c
@@ -7981,7 +7981,8 @@ wasm_interp_call_wasm(WASMModuleInstance *module_inst, WASMExecEnv *exec_env,
     }
     else {
 #if WASM_ENABLE_DUMP_CALL_STACK != 0
-        if (wasm_interp_create_call_stack(exec_env)) {
+        if (wasm_interp_create_call_stack(exec_env)
+            && !exec_env->disable_dump_call_stack) {
             wasm_interp_dump_call_stack(exec_env, true, NULL, 0);
         }
 #endif
diff --git a/core/iwasm/interpreter/wasm_runtime.c b/core/iwasm/interpreter/wasm_runtime.c
index b4aa483d..8b2cbbf5 100644
--- a/core/iwasm/interpreter/wasm_runtime.c
+++ b/core/iwasm/interpreter/wasm_runtime.c
@@ -3643,7 +3643,8 @@ call_wasm_with_hw_bound_check(WASMModuleInstance *module_inst,
      * then the stack-frame is already freed inside wasm_interp_call_wasm */
     if (!ret) {
 #if WASM_ENABLE_DUMP_CALL_STACK != 0
-        if (wasm_interp_create_call_stack(exec_env)) {
+        if (wasm_interp_create_call_stack(exec_env)
+            && !exec_env->disable_dump_call_stack) {
             wasm_interp_dump_call_stack(exec_env, true, NULL, 0);
         }
 #endif
-- 
2.51.0

